using System;
using System.IO;
using System.Text;

namespace Inedo.Data.CodeGenerator
{
    internal abstract class CodeGeneratorBase
    {
        protected CodeGeneratorBase(Func<string, SqlServerConnection> connect, string connectionString, string baseNamespace)
        {
            this.Connect = connect;
            this.ConnectionString = connectionString;
            this.BaseNamespace = baseNamespace;
        }

        public abstract string FileName { get; }

        protected string ConnectionString { get; set; }
        protected string BaseNamespace { get; set; }

        private Func<string, SqlServerConnection> Connect { get; }

        public virtual void GenerateCodeFile(FileStream file)
        {
            using IndentingTextWriter writer = this.CreateWriter(file);
            this.WriteHeader(writer);
            this.WriteBody(writer);
            this.WriteFooter(writer);
        }

        protected virtual IndentingTextWriter CreateWriter(FileStream file)
        {
            return new IndentingTextWriter(new StreamWriter(file, new UTF8Encoding(false)));
        }
        protected virtual void WriteHeader(IndentingTextWriter writer)
        {
            writer.WriteLine("//------------------------------------------------------------------------------");
            writer.WriteLine("// <auto-generated>");
            writer.WriteLine("//     This code was generated by a tool.");
            writer.WriteLine("//");
            writer.WriteLine("//     Changes to this file may cause incorrect behavior and will be lost if");
            writer.WriteLine("//     the code is regenerated.");
            writer.WriteLine("// </auto-generated>");
            writer.WriteLine("//------------------------------------------------------------------------------");
            writer.WriteLine();
            writer.WriteLine("using global::System;");
            writer.WriteLine("using global::System.ComponentModel;");
            writer.WriteLine("using global::System.Data;");
            writer.WriteLine("using global::System.Data.SqlClient;");
            writer.WriteLine("using global::System.Collections.Generic;");
            writer.WriteLine("using global::System.Linq;");
            writer.WriteLine("using global::System.Threading.Tasks;");
            writer.WriteLine("using global::System.Xml.Linq;");
            writer.WriteLine("using global::Inedo.Data;");
            writer.WriteLine();
        }
        protected abstract void WriteBody(IndentingTextWriter writer);
        protected virtual void WriteFooter(IndentingTextWriter writer)
        {
        }

        protected SqlServerConnection CreateConnection()
        {
            if (string.IsNullOrEmpty(this.ConnectionString)) 
                throw new InvalidOperationException("There is no default connection string set for this object.");

            return this.Connect(this.ConnectionString);
        }

        public virtual bool ShouldGenerate() => true;
    }
}
